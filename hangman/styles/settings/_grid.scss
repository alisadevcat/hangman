@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
  "4": 40px,
  "100": 100px
);

$layout-values: flex-start, flex-end, center, space-between, space-around;
$align-values: flex-start, flex-end, center, baseline;

.row {
  display: flex;
  flex-flow: row wrap;
}
.col{
  display: flex;
  flex-flow: column nowrap;
}
.half{
  flex-basis: 50%;
}
// grid gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    gap: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

// justify content classes
@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

// align items classes
@each $val in $align-values {
  .align-#{$val} {
    align-items: $val;
  }
}
// col classes
// @include xs {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-xs {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }
// @include sm {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-sm {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }
// @include md {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-md {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }
// @include lg {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-lg {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }
// @include xl {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-xl {
//       box-sizing: border-box;
//       flex-grow: 0;
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }
// }
.flex-30{
  flex-basis: 30%;
}
.flex-70{
  flex-basis: 70%;
}